language: generic

#env:
matrix:
    allow_failures:
        - env: TARGET_SYSTEM=OSX
    include:
        - os: linux
          dist: trusty
          compiler: g++
          sudo: required
          dist: trusty
          env: TARGET_SYSTEM=Linux
          addons:
            apt:
              sources:
                #- sourceline: 'ppa:dhor/myway'
                - sourceline: 'ppa:otto-kesselgulasch/gimp-edge'
                - sourceline: 'ppa:ubuntu-toolchain-r/test'
              packages:
                - gcc-5
                - g++-5
                - gettext
                - intltool
                - gir1.2-gtk-3.0
                - libgtk2.0-dev
                - liblcms2-dev
                - libpng12-dev
                - python-dev
                - python-gi-dev
                - python-gi-cairo
                - python-nose
                - python-numpy
                - automake
                - gtk-doc-tools
                - gobject-introspection
                - libfftw3-dev
                - libjpeg-turbo8-dev
                - libpng12-dev
                - libwebp-dev
                - libtiff4-dev
                - libxml2-dev
                - swig
                - libmagick++-dev
                - bc
                - libcfitsio3-dev
                - libgsl0-dev
                - libmatio-dev
                - liborc-0.4-dev
                - libpoppler-glib-dev
                - librsvg2-dev
                - libgif-dev
                - python-dev
                - libsigc++-2.0-dev
                - libpixman-1-dev
                - libpango1.0-dev
                - libpangoft2-1.0-0
                - libglib2.0-dev
                - libglibmm-2.4-dev
                - libgtkmm-2.4-dev
                - libpugixml-dev
                - gtk2-engines-pixbuf
                - zenity
          before_script:
              #- cd non_existent_dir
              - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5
              - cd build
              - export PKG_CONFIG_PATH=/app/lib/pkgconfig:${PKG_CONFIG_PATH}
              - export LD_LIBRARY_PATH=/app/lib:${LD_LIBRARY_PATH}
              #- git clone -b v8.4.1 --depth 1 https://github.com/jcupitt/libvips.git libvips
              #- git clone https://github.com/jcupitt/libvips.git libvips
              #- cd libvips
              # revert to git version of 9/2/2017
              #- git reset --hard 6691e07d72c284468c77f4a95139ac43bf0cdc6f
              #- wget http://www.vips.ecs.soton.ac.uk/supported/8.4/vips-8.4.5.tar.gz
              #- tar xzvf vips-8.4.5.tar.gz
              #- cd vips-8.4.5
              - wget https://github.com/jcupitt/libvips/releases/download/v8.5.6/vips-8.5.6.tar.gz
              - tar xzvf vips-8.5.6.tar.gz
              - cd vips-8.5.6
              - ./autogen.sh
              - FLAGS="-g -O2 -march=nocona -mno-sse3 -mtune=generic -ftree-vectorize" CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS} -fpermissive" ./configure --prefix=/app --disable-gtk-doc --disable-gtk-doc-html --disable-introspection --enable-debug=no --without-python --without-magick --without-libwebp --enable-pyvips8=no --enable-shared=yes --enable-static=no
              - make -j2
              - sudo make install
              - cd ..
              - rm -rf libvips
              - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DINSTALL_PREFIX=/app -DBUNDLED_LENSFUN=ON ..
              - 'if [ x"${TRAVIS_BRANCH}" != "xmaster" ]; then
                  echo "#include <version.hh>" > ../src/version.cc || travis_terminate 1;
                  echo "const char* PF::version_string = \"PhotoFlow git-${TRAVIS_BRANCH}-${TRAVIS_COMMIT}\";" >> ../src/version.cc || travis_terminate 1;
                fi'
              - make -j2
              - sudo make install
              - cd ..
              #- sudo rm -fr PhotoFlow
          script:
              - cd $TRAVIS_BUILD_DIR
              - pwd
              - bash appimage/appimage.sh
          after_success:
              - cd $HOME
              - cd $TRAVIS_BUILD_DIR
              - cd ..
              - pwd
              - ls -lh
              - ls -lh out/* # Assuming you have some files in out/ that you would like to upload
              #- wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
              #- wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload.sh
              - wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload_rotate.sh
              - 'if [ x"${TRAVIS_BRANCH}" = "xstable" ]; then
                  bash  ./upload_rotate.sh "continuous" out/*;
                fi'
              - 'if [ x"${TRAVIS_BRANCH}" = "xlinear_gamma" ]; then
                  bash  ./upload_rotate.sh "unstable" out/*;
                fi'
              - find /usr -name gconv
        - os: linux
          dist: trusty
          compiler: g++
          sudo: required
          dist: trusty
          env: TARGET_SYSTEM=Windows
          before_script:
            #- cd non_existent_dir
            - pwd
            - rm -rf windows && git clone https://github.com/aferrero2707/pf-build-win.git windows
            - sudo docker run -it -e "TRAVIS_BUILD_DIR=/sources" -e "TRAVIS_BRANCH=${TRAVIS_BRANCH}" -e "TRAVIS_COMMIT=${TRAVIS_COMMIT}" -v $(pwd):/sources photoflow/docker-zesty-mingw bash -c /sources/windows/package-w64.sh
            - # check if zip file was successfully created
            - # abort job with failure if not
            - ls photoflow-w64*.zip
          after_success:
            - cd $TRAVIS_BUILD_DIR
            - pwd
            #- wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload.sh
            - wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload_rotate.sh
            - 'if [ x"${TRAVIS_BRANCH}" = "xstable" ]; then
                bash  ./upload_rotate.sh "continuous" photoflow*.zip;
              fi'
            - 'if [ x"${TRAVIS_BRANCH}" = "xlinear_gamma" ]; then
                bash  ./upload_rotate.sh "unstable" photoflow*.zip;
              fi'
        - os: osx
          cache: ccache
          osx_image: xcode7.3
          env: 
          - TARGET_SYSTEM=OSX
            PYTHON=/usr/local/bin/python
            JPEG=/usr/local/opt/mozjpeg
            PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig
            JOBS="`sysctl -n hw.ncpu`"
            MACOSX_DEPLOYMENT_TARGET=10.8
            HOMEBREW_NO_AUTO_UPDATE=1
            PATH=$HOME/homebrew/opt/python/libexec/bin:$HOME/homebrew/bin:$PATH
            LD_LIBRARY_PATH=$HOME/homebrew/lib:$LD_LIBRARY_PATH
            PKG_CONFIG_PATH=$HOME/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH
          before_script:
            - rm -rf osx
            - git clone https://github.com/aferrero2707/pf-build-osx.git osx
            - $TRAVIS_BUILD_DIR/osx/dep-install.sh 4
            #- export PATH="/usr/local/opt/ccache/libexec:$PATH"
            - cd $TRAVIS_BUILD_DIR
            - mkdir -p build
            - cd build
            - cmake -DBUNDLED_LENSFUN=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=$HOME/homebrew ..
            #- cmake -DBUNDLED_LENSFUN=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/usr/local ..
            - make -j 3
            - make install
            - cd $TRAVIS_BUILD_DIR/osx
            - ./package-photoflow-hb.sh
            #- wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload_rotate.sh
            - wget -c https://github.com/aferrero2707/uploadtool/raw/master/upload_rotate.sh
            - 'if [ x"${TRAVIS_BRANCH}" = "xstable" ]; then
                bash  ./upload_rotate.sh "continuous" $HOME/photoflow-osx-*.zip > /dev/null;
              fi'
            - 'if [ x"${TRAVIS_BRANCH}" = "xlinear_gamma" ]; then
                bash  ./upload_rotate.sh "unstable" $HOME/photoflow-osx-*.zip > /dev/null;
              fi'


branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
    - /^(?i:unstable)$/
